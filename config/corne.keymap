#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <6>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

#define TAPPING_TERM 200

&mt {
    tapping-term-ms = <180>;
    flavor = "balanced";
};

/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep

    */

        td_lock: tap_dance_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LOCK";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Clear_BLE_Profile {
            bindings = <&bt BT_CLR>;
            key-positions = <0 38 5>;
        };

        Space {
            bindings = <&kp SPACE>;
            key-positions = <29 28>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <17 16>;
        };

        Capslock {
            bindings = <&kp CLCK>;
            key-positions = <5 6>;
        };
    };

    macros {
        git_status: git_status {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
            label = "GIT_STATUS";
        };

        git_commit_all: git_commit_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "GIT_COMMIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
&kp GRAVE         &kp Q  &kp W           &kp E        &kp R             &kp T        &kp Y      &kp U              &kp I        &kp O            &kp P      &kp BACKSLASH
&kp TAB           &kp A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G        &kp H      &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &kp SEMI   &kp SINGLE_QUOTE
&kp LEFT_CONTROL  &kp Z  &kp X           &kp C        &kp V             &kp B        &kp N      &kp M              &kp COMMA    &kp DOT          &kp SLASH  &kp MINUS
                                         &kp LCTRL    &lt 1 ESCAPE      &kp SPACE    &kp ENTER  &lt 2 BACKSPACE    &kp ENTER
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        symbols_layer {
            label = "SYMBOLS";
            bindings = <
&trans  &trans  &kp N7        &kp N8        &kp N9        &trans    &trans  &kp LEFT_BRACKET      &kp EQUAL  &kp RIGHT_BRACKET      &trans  &trans
&trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans    &trans  &kp LEFT_BRACE        &trans     &kp RIGHT_BRACE        &trans  &trans
&trans  &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans    &trans  &kp LEFT_PARENTHESIS  &trans     &kp RIGHT_PARENTHESIS  &trans  &trans
                              &trans        &trans        &trans    &trans  &trans                &trans
            >;
        };

        extended_layer {
            label = "EXT";
            bindings = <
&trans    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6                &kp F7                &kp F8            &kp F9      &kp F10          &kp F12
&kp K_PP  &kp K_PREV    &kp K_NEXT    &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans            &trans      &trans           &ext_power EP_TOG
&trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans                &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF
                                      &trans        &trans        &trans          &trans                &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate_EXT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

